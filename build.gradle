plugins {
    id 'java-library'
    id 'maven-publish'
}

group = artifactGroupId
version = packageVersion
sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.15.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.15.2'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.15.2'
    implementation group: 'com.google.guava', name: 'guava', version: '32.1.2-jre'

    implementation group: 'org.testcontainers', name: 'testcontainers', version: '1.19.1'
    implementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.19.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'
    // test container modules
    implementation group: 'org.testcontainers', name: 'kafka', version: '1.19.1'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.10.0'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.9'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.5.0'
    testImplementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5-fluent', version: '5.2.1'
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        exceptionFormat = "full"
    }
}

tasks.named('jar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            groupId = project.group
            artifactId = artifactId
            version = project.version
            from components.java

            pom {
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url mvnMainRepoUrl
            credentials {
                username mvnRepoUsername
                password mvnRepoPassword
            }
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    if(JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_11)) {
        options.addBooleanOption 'html5', true
    }
}